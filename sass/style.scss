$h1-color:red;
$h2-color:blue;
$h3-color:yellow;
$h4-color:gray;
h1 {
    color: $h1-color;
}

h2 {
    color: $h2-color;
}

h3 {
    color: $h2-color;
}

h4 {
    color: $h4-color;
}

$test-bg:green !default;
$test-bg:yellow;
.test {
    background-color: $test-bg;
}

// 混合宏 VS 继承 VS 占位符
//SCSS中混合宏使用
@mixin mt($var) {
    margin-top: $var;
}

.block {
    @include mt(5px);
    span {
        display: block;
        @include mt(5px);
    }
}

.header {
    color: orange;
    @include mt(5px);
    span {
        display: block;
        @include mt(5px);
    }
} //SCSS 继承的运用
.mt {
    margin-top: 5px;
}

.block {
    @extend .mt;
    span {
        display: block;
        @extend .mt;
    }
}

.header {
    color: orange;
    @extend .mt;
    span {
        display: block;
        @extend .mt;
    }
} //SCSS中占位符的使用
%mt {
    margin-top: 5px;
}

.block {
    @extend %mt;
    span {
        display: block;
        @extend %mt;
    }
}

.header {
    color: orange;
    @extend %mt;
    span {
        display: block;
        @extend %mt;
    }
}


/* 字符串函数 */

.test1 {
    content: unquote('Hello Sass!');
}

.test2 {
    content: unquote("'Hello Sass!'");
}

.test1 {
    content: quote('Hello Sass!');
}

.test2 {
    content: quote("Hello Sass!");
}

.footer {
    width: percentage(2px/ 10px);
}

.footer {
    width: percentage(.2);
}

.footer {
    width: percentage(2em/10em);
}


/* 数据地图 */

$theme-color: ( default: ( bgcolor: #fff, text-color: #444, link-color: #39f), primary:( bgcolor: #000, text-color:#fff, link-color: #93f), negative: ( bgcolor: #f36, text-color: #fefefe, link-color: #d4e));

/* @at-root */

$colors:(
    dribble: #ea4c89,
    facebook: #3b5998,
    github: #171515,
    google: #db4437,
    twitter: #55acee
);

.demo {
    animation: motion 3s infinite;
    @at-root {
        @keyframes motion {
            0% {
                color: map-get($colors, facebook);
            }
            100% {
                color: map-get($colors, google);
            }
        }
    }
}